Sun: 11/20/2016

Made ~/projects/iccr

Created github repo:  https://github.com/strongwares/iccr

git clone https://github.com/strongwares/iccr.git
~/projects/iccr/iccr$ ls
README.md

git config --global user.email "strongwares@gmail.com"
git config --global user.name "strongwares"

git remote add origin https://github.com/strongwares/<>.git
git add <>
git commit -m "..."
git push -u origin master

sudo apt-get install maven
which mvn
/usr/bin/mvn
dana@optiPlex-780-1-ubuntu:~/projects/iccr/iccr$ mvn --version
Apache Maven 3.0.5
Maven home: /usr/share/maven
Java version: 1.7.0_75, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-7-openjdk-amd64/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "3.16.0-34-generic", arch: "amd64", family: "unix"


Started upgrade to 16.04

Defined rest service api: /rs/app/config/{id}

Checked in first firefly-swarm packaging of uberjar with 
---------------------
Mon 11/21/16

Added global gitignore:
      ~/.gitignore_global
      git config --global core.excludesfile ~/.gitignore_global

Added check for api-access-key

Add properties source to rest impl

Add installer/iccr-scripts

Added bash script to start iccr, setting env var, setting cmd line

java env setting for prop file dir: iccrConfDir=/opt/iccr/conf

define props:
for passing to cmd line:
iccrDir=/opt/iccr
iccrConfDir=/opt/iccr/conf
iccrLogDir=/opt/iccr/logs
iccrLibDir=/opt/iccr/lib
iccrBinDir=/opt/iccr/bin
iccrLogLevel=DEBUG

for iccr.prop:
iccrStartAtStartup=false
iccrStartIotaAtStartup=false
iccrStopIotaAtShutdown=false

iccrPortNumber=14266
iotaDownloadLink=http://85.93.93.110
iotaDownloadFilename=IRI.jar
iotaDir=/opt/iota
iotaStartCmd=java -jar IRI.jar
iotaPortNumber=14265
iotaNeighbors=al,bill,fred
iotaNeighbor.key.al=al
iotaNeighbor.ip.al=10.0.0.1
iotaNeighbor.name.al=Al
iotaNeighbor.descr.al=al's node
iotaNeighbor.active.al=true
iotaNeighborRefreshTime=10

Deliver neighbors as neighbors dto

Finish /app/config update operations

checked in
-----------
Tue: 11/22/2016

Staging dist:
cp installer/property-files/src/main/resources/iccr.properties /opt/iccr/conf
cp installer/iccr-scripts/src/main/scripts/iccr-ctl /opt/iccr/bin/
cp packager/swarm/target/iccr-swarm.jar /opt/iccr/lib/iccr.jar


Finish properties: update writes out prop file

Checked in

Changed iota-api to iota-agent module

Delete iccr-agent

Delete iota-api

Checked in

Added iotaDownloadLink prop

Created ActionFactory:
install
start
stop
deletedb
delete

Checked in

------------
Wed: 11/23/2016

Add us for configurable IOTA dld link: us 26 iotaDownloadLink

Add us for configurable IOTA dld link: us 27 iotaDownloadFilename

Added prop iotaDownloadFilename=IRI.jar

AbstractAction validate preconditions

us 4 iccr install iota
rest api: post rs/iota/cmd/{install}

new us 28 Iota Status Action
StatusAction
validate props iotaDir
execution: file exists, is running, answers query

checked in

-----------
Thu 11/24/16

Locale values supported by jvm: http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html

i18n tutorial: http://docs.oracle.com/javase/tutorial/i18n/index.html

Locale properties
# Possible values for languages (i.e. English, French, German, Spanish, Italian) are: en, fr, de, sp, it
# See http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html
#iccrLanguageLocale=de
iccrLanguageLocale=en
# Possible values for English speaking countries (i.e. US, GreatBritain) are: US, GB, etc
# Possible values for German speaking countries (i.e. Germany, Austria, Switzerland) are: DE, AT, CH
# See http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html
#iccrCountryLocale=DE
iccrCountryLocale=US

Localizer

MessagesBundle_de_DE.properties
MessagesBundle_en_US.properties

Action execute framework

ActionProcessFactory

OsProcessAction
ProcessBuilder: args, env, file
 ProcessBuilder for status check: ps fax | grep IRI


curl -H "Content-Type: application/json" -X POST http://localhost:14266/iccr/rs/iota/cmd/status
2016-11-24 17:24:47,457 INFO  [stdout] (default task-3) starting to execute process command (iotastatus):  ps fax | grep IRI | grep -v grep
2016-11-24 17:24:47,700 INFO  [stdout] (default task-3) exception trying to execute an action (name: iotastatus, cmd:  ps fax | grep IRI | grep -v grep): Cannot run program "ps fax | grep IRI | grep -v grep": error=2, No such file or directory
2016-11-24 17:24:47,702 INFO  [stdout] (default task-3) exception trying to execute an action (name: iotastatus, cmd:  ps fax | grep IRI | grep -v grep): Cannot run program "ps fax | grep IRI | grep -v grep": error=2, No such file or directory

checked in

New checkiotastatus.bash script

new dir to dld to /opt/iccr/tmp
new dir make backup copies to /opt/iccr/bak

Pass iccrDir jvm env to iccr instead of conf dir

iotastatus only do osprocess if !win

use apache Http components framework

Http/HttpMethod HttpGet HttpPost

iotastatus do iotainfo httpaction if win

download iota action

Checked in

-----------
Fri 11/25/16

http get release conn after read

http post release conn after read

update i13n install iota action

install iota action/process

write out downloaded iri jar

us 5 iccr remember iota install info: persistor captures event csv

persist iota dld info: audit dir, iota-event.csv:
<date,<event>,<data>,<data2>
<date>,download,<dld link>,<filepath>
<date>,fail download,<dldlink>,<msg>
<date>,fail download,<filepath>,<msg>
<date>,install,<filepath>,<iri.jar>
<date>,fail install,<filepath>,<msg>
<date>,stop,?,?
<date>,fail stop,?,<msg>
<date>,start,<cmd>
<date>,fail start,?,<msg>

Get start cmd or iri.jar in start cmd for putting in persistence in install iota action

InstallAction:
validate props iotaDir, iotaDownloadLink, iotaDownloadFilename
get Iota status
download
persist events, version, and date
process and script to install new iri <dldFilePath>: copy iotaDir/iriFileName to /opt/iccr/bak/iri.jar.timestamp; cp dldFilePath to iriFilePath
and make backup copy of iota
start iota
      startiota.bash
      gets startCmd from iccr.props
      gets portNum from iccr.props
      could get jvm args from iccr.props
      stores pid
stop Iota if necessary:
     process and script to nicely kill
     need pid

Sync dld file name Iri-version.jar.time with name of jar in start cmd (java -jar iri.jar)

start iota action: from script that picks up the configured prop

? on start, first verify if the iri.jar exists in iota dir

us 7 iccr start iota
rest api: post /rs/iota/cmd/{start}
StartAction: validate props iotaDir, iotaStartCmd, iotaPortNumber

us 8 iccr stop iota
rest api:  post /rs/iota/cmd/{stop}
StopAction: validate props iotaDir
script: stopiota.bash

----
Sat 11/26/2016

new AgentUtil utilities

install iri first validates iota dir exists

startiota first validates iota dir exists

Emit newline to iota-events.csv

Checked in

install action do file ops instead of spawning osprocess

fixed stopiota.bash

fixed startiota.bash

start iota log event

stop iota log event

test:
status
stop
start
status
stop
start
install
status
stop
install
status

start needs to check if already running
status
start
start
status
stop
status
start
restart

new restart command

checked in

write localized date to iota-event.csv

fill out delete action: stop, delete IRI.jar
us 10 iccr delete iota
rest api: post /rs/iota/cmd/{delete}
DeleteAction:
validate props iotaDir


fill out deletedb: stop, delete *.iri
us 9 iccr delete iota db
rest api: post /rs/iota/cmd/{deletedb}
DeletedbAction:
validate props iotaDir

deletedb
start
delete
start -> fail
download
status
start
stop
start
restart

checked in

todo:
see question: should install also start, it is now

see question: add nbrs should always be done in start?

capture output of os process to debug failure

write action status strings to a place that a rest api long poll can query for scrolling log window in UI

iota get node info

purge iccr.properties that aren't configurable from api

is processfactory needed?

ProcessBuilder for iccr ctl

Action for restart iccr action

Process for restart iccr

log exceptions that are caught by rest resource

copy updated props to conf
copy msg bundles to conf

iccr-cli using http client to talk to iccr over iccr rest api

StatusAction execution

Shutdown hook

update dld us with note: dld file will be stored, but copied to iri.jar in start cmd

Server emit localized text for status in UI

new us: event csv

new us: restart

new us: localized text
iccrCountryLocale=US
iccrLanguageLocale=en
#iccrCountryLocale=DE
#iccrLanguageLocale=de

Set nbrs in rest API support direct set of neighbors

How best to do neighbors in java prop file: each nbr needs a key?

Do specific app/config/neighbors get/set rest api?

update us 4 additional prop validations

us 6 iccr iota get install info
rest api: get rs/iota/installinfo
agent

us 11 get iota node info
rest api: get /rs/iota/nodeinfo
agent

us 12 get iota nbrs
rest api: get /rs/iota/neighbors
agent

Manage logs: silence swarm, store changes to single file for audit purposes

Will update of neighbor config prop need a specific dto for incoming handling?

us 5 remember iota install info

us 6 rest api for get iota isntall info

test resources:
iccr.properties

installer:
iccr.properties

finish installer/iccr-scripts

finish installer/property-files

load api access key into resource impl

add logging

windows cmd script to control iccr

autodetect if iota is already installed and/or running at install

change us drop bulk set

change us add direct set of nbrs in separate endpoint

new us iotaDownloadFilename=IRI.jar

new us export iota event info csv


*****
questions:
Are neighbors required before starting iota, should starting iota first check for neighbors being configured?

Is IRI being started with sudo?

Starting iota has a single command: java -jar IRI.jar
Additional arguments can be passed to the java VM: java -DpropName=propValue -jar IRI.jar
Arguments can be passed as command line input to the IRI.jar: java -jar IRI.jar <arg1> <arg2>
Actual filename of IRI.jar can be changed:  java -jar IRI-1.1.0.jar
Needs sudo and run in background with output redirected to a file: sudo nohup java -jar IRI.jar > /opt/iota/iri.console 2>&1 &
All together:   sudo nohup java -DpropName=propVal -jar IRI-1.1.0.jar <port> <nbr1> <nbr2>  > /opt/iota/iri.console 2>&1 &

Info needed to run IRI:
1) List of key value pairs of properties to pass java VM
2) Path to which IOTA or IRI jar file to run
3) Command line arguments to pass to IOTA

Or just 4 props with OS specific details
iotaDir=/opt/iota
iotaStartCmd=java -jar IRI.jar
iotaPortNumber=14265

and maybe jvm args:
iotaJvmArgKeys=a,b,c
iotaJvmArg.a=a-val
iotaJvmArg.b=b-val
iotaJvmArg.c=c-val

Could result in a script:  startIota.bash <jarname> <portNumber> <jvmargs>
jvmargs="-Dprop=value"
cd $iotaDir
sudo nohup java ${jvmargs} -jar IRI.jar $iotaPortNumber > iota.console 2>&1 &
capture pid
*****
